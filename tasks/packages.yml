- name: Add ulauncher repo
  ansible.builtin.apt_repository:
    repo: ppa:agornostal/ulauncher
    state: present

- name: Add fish repo
  ansible.builtin.apt_repository:
    repo: ppa:fish-shell/release-3
    state: present

- name: Add webup8d repo
  ansible.builtin.apt_repository:
    repo: ppa:nilarimogard/webupd8
    state: present

- name: Add apt-fast repo
  ansible.builtin.apt_repository:
    repo: ppa:apt-fast/stable
    state: present

- name: Add insync key
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: ACCAF35C
    state: present

- name: Add insync repo
  ansible.builtin.apt_repository:
    repo: "deb http://apt.insync.io/ubuntu {{ ansible_distribution_release }} non-free contrib"
    state: present

- name: Add spotify key
  ansible.builtin.apt_key:
    url: https://download.spotify.com/debian/pubkey_0D811D58.gpg
    state: present

- name: Add spotify repo
  ansible.builtin.apt_repository:
    repo: "deb http://repository.spotify.com stable non-free"
    state: present

- name: Install apt packages
  apt:
    state: present
    pkg:
      - alacritty
      - ansible
      - ansible-lint
      - apt-fast
      - apt-transport-https
      - aptitude
      - aria2
      - at
      - autoconf
      - automake
      - build-essential
      - ca-certificates
      - calibre
      - celluloid
      - clang-format
      - cmake
      - composer
      - cowsay
      - curl
      - exfat-utils
      - fail2ban
      - fastboot
      - fish
      - flameshot
      - fonts-inter
      - fonts-roboto
      - git
      - gnome-boxes
      - golang
      - gzip
      - htop
      - httpie
      - imagemagick
      - inkscape
      - insync
      - iperf
      - julia
      - language-pack-es
      - latexmk
      - libbz2-dev
      - libcurl4-openssl-dev
      - libexpat-dev
      - libffi-dev
      - libharfbuzz-bin
      - liblzma-dev
      - libncurses-dev
      - libncursesw5
      - libnotify-bin
      - libreadline-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libssl-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libxslt1-dev
      - libyaml-dev
      - linux-cloud-tools-generic
      - linux-tools-common
      - linux-tools-generic
      - llvm
      - llvm
      - lolcat
      - m4
      - magic-wormhole
      - masscan
      - mesa-common-dev
      - meson
      - micro
      - minicom
      - mlocate
      - mosh
      - ncdu
      - neofetch
      - network-manager-openvpn
      - nmap
      - nvtop
      - openvpn
      - pandoc
      - pavucontrol
      - preload
      - prettyping
      - protobuf-compiler
      - python3-colorama
      - python3-pip
      - ruby
      - shellcheck
      - snapd
      - software-properties-common
      - spotify-client
      - sqlite3
      - texinfo
      - texlive-full
      - tk-dev
      - transmission
      - tree
      - ufw
      - ulauncher
      - unattended-upgrades
      - unrar
      - v4l-utils
      - whois
      - xz-utils
      - xz-utils
      - zlib1g-dev
      - zlib1g-dev

- name: Install normal snap packages
  community.general.snap:
    name:
      - foliate
      - hugo
      - todoist
      - ipfs-desktop
      - musixmatch
      - zulip

- name: Install classic snap packages
  community.general.snap:
    name:
      - flutter
      - shotcut
      - chezmoi
    classic: yes

# - name: Install edge snap packages
# community.general.snap:
# name:
# -
# channel: latest/edge

- name: Add the flathub flatpak repo
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

- name: Install flatpak packages
  community.general.flatpak: name={{ item }}
  with_items:
    - com.axosoft.GitKraken
    - com.github.xournalpp.xournalpp
    - com.stremio.Stremio
    - org.telegram.desktop
    - org.zotero.Zotero
    - md.obsidian.Obsidian
    - org.jamovi.jamovi
  become: true
  become_user: "{{ user }}"
#
# - name: Install Julia packages
# command:
# cmd: >
# julia -e 'using Pkg; Pkg.add("{{ item }}")'
# creates: "/home/{{ user }}/.julia/packages/{{ item }}/"
# with_items:
# - Plots
# - DifferentialEquations
# - Revise
# - OhMyREPL
# - Literate
# - Pluto
# - PyCall
# become: true
# become_user: "{{ user }}"

- name: Install homebrew
  shell:
    cmd: >
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    creates: /home/linuxbrew/.linuxbrew/bin/brew
  become: true
  become_user: "{{ user }}"

- name: Upgrade brew packages
  community.general.homebrew:
    update_homebrew: yes
    upgrade_all: yes
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Tap cask-fonts/ for brewing
  community.general.homebrew_tap:
    name: linuxbrew/fonts
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Install brew packages
  community.general.homebrew: name={{ item }}
    state=latest
  with_items:
    - pulumi
    - navi
    - lsd
    - fzf
    - pyenv
    - fd
    - hyperfine
    - bat
    - font-fira-code-nerd-font
    - thefuck
    - glow
    - nnn
    - svn
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Install Merriweather font
  community.general.homebrew: name={{ item }}
    state=head
  with_items:
    - linuxbrew/fonts/font-merriweather
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Create font directory
  file:
    path: /home/{{ user }}/.local/share/fonts/
    state: directory
  notify:
    - Reload font cache
