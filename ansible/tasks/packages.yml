- name: Add repositories
  block:
    # We use add-apt-repository instead of apt-key and apt_repository
    # because apt_repository doesn't support the new signed-by option
    # instead relying on the deprecated keyring
    - name: Add ulauncher repo
      ansible.builtin.command:
        cmd: add-apt-repository -y ppa:agornostal/ulauncher
        creates: /etc/apt/sources.list.d/agornostal-ubuntu-ulauncher-{{ ansible_distribution_release }}.list

    - name: Add fish repo
      ansible.builtin.command:
        cmd: add-apt-repository -y ppa:fish-shell/release-3
        creates: /etc/apt/sources.list.d/fish-shell-ubuntu-release-3-{{ ansible_distribution_release }}.list

    - name: Add apt-fast repo
      ansible.builtin.command:
        cmd: add-apt-repository -y ppa:apt-fast/stable
        creates: /etc/apt/sources.list.d/apt-fast-ubuntu-stable-{{ ansible_distribution_release }}.list

    - name: Add solaar repo
      ansible.builtin.command:
        cmd: add-apt-repository -y ppa:solaar-unifying/ppa
        creates: /etc/apt/sources.list.d/solaar-unifying-ubuntu-ppa-{{ ansible_distribution_release }}.list

    - name: Add cryptomator repo
      ansible.builtin.command:
        cmd: add-apt-repository -y ppa:sebastian-stenzel/cryptomator
        creates: /etc/apt/sources.list.d/sebastian-stenzel-ubuntu-cryptomator-{{ ansible_distribution_release }}.list

    - name: Add insync key
      ansible.builtin.command: |
        gpg --keyserver keyserver.ubuntu.com --recv-keys ACCAF35C || true
        gpg --export ACCAF35C > /etc/apt/keyrings/insync.gpg
      args:
        creates: /etc/apt/keyrings/insync.gpg

    - name: Add insync repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/insync.gpg] http://apt.insync.io/ubuntu {{ ansible_distribution_release }} non-free contrib"
        state: present

    - name: Add spotify repo
      block:
        - name: Download spotify key
          ansible.builtin.shell: curl -fsSL https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg | gpg --dearmor -o /etc/apt/keyrings/spotify.gpg
          args:
            creates: /etc/apt/keyrings/spotify.gpg

        - name: Add spotify repo
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/spotify.gpg] http://repository.spotify.com stable non-free"
            state: present

    - name: Add the flathub flatpak repo
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

- name: Install apt packages
  apt:
    state: present
    update_cache: yes
    pkg:
      - alacritty
      - ansible
      - ansible-lint
      - apt-fast
      - apt-transport-https
      - aptitude
      - aria2
      - autoconf
      - automake
      - build-essential
      - bind9-dnsutils
      - ca-certificates
      - calibre
      - celluloid
      - clang-format
      - cmake
      - composer
      - cowsay
      - curl
      - fastboot
      - fish
      - flameshot
      - fonts-inter
      - fonts-roboto
      - git
      - gnome-boxes
      - golang
      - gzip
      - htop
      - httpie
      - imagemagick
      - inkscape
      - insync
      - iperf
      - language-pack-es
      - latexmk
      - libbz2-dev
      - libcurl4-openssl-dev
      - libexpat-dev
      - libffi-dev
      - libharfbuzz-bin
      - liblzma-dev
      - libncurses-dev
      - libncursesw5
      - libnotify-bin
      - libreadline-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libssl-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libxslt1-dev
      - libyaml-dev
      - llvm
      - lolcat
      - magic-wormhole
      - masscan
      - mesa-common-dev
      - meson
      - micro
      - mosh
      - ncdu
      - neofetch
      - network-manager-openvpn
      - nmap
      - nvtop
      - openvpn
      - preload
      - prettyping
      - python3-colorama
      - ruby
      - shellcheck
      - snapd
      - software-properties-common
      - spotify-client
      - sqlite3
      - texinfo
      - texlive-full
      - tk-dev
      - transmission
      - tree
      - ufw
      - ulauncher
      - unrar
      - whois
      - xz-utils
      - zlib1g-dev
      - solaar
      - gnome-sushi
      - cryptomator
      - timeshift
      - steam
      - lutris
      - python3-pip
      # For Kinto
      - python3-gi
      - gnome-tweaks
      - gnome-shell-extensions
      - gnome-shell-extension-appindicator
      - gir1.2-appindicator3-0.1

- name: Install snap packages
  block:
  - name: Install normal snap packages
    community.general.snap:
      name:
        - foliate
        - hugo
        - todoist
        - ipfs-desktop
        - musixmatch
        - zulip
        - exercism

  - name: Install classic snap packages
    community.general.snap:
      name:
        - flutter
        - shotcut
        - chezmoi
      classic: yes

    # - name: Install edge snap packages
    # community.general.snap:
    # name:
    # -
    # channel: latest/edge

- name: Install flatpak packages
  community.general.flatpak: name={{ item }}
  with_items:
    - com.axosoft.GitKraken
    - com.github.xournalpp.xournalpp
    - com.stremio.Stremio
    - org.telegram.desktop
    - org.zotero.Zotero
    - md.obsidian.Obsidian
    - org.jamovi.jamovi
  become: true
  become_user: "{{ user }}"

- name: Install Julia and its packages
  block:
    - name: Install Julia
      ansible.builtin.shell: |
        curl -fsSL https://install.julialang.org | sh -s -- --yes
      become: true
      become_user: "{{ user }}"
      args:
        creates: "/home/{{ user }}/.juliaup/bin/julia"

    - name: Install Julia packages
      ansible.builtin.command:
        cmd: /home/{{ user }}/.juliaup/bin/julia -e 'using Pkg; Pkg.add("{{ item }}")'
        creates: "/home/{{ user }}/.julia/packages/{{ item }}/"
      with_items:
      - Plots
      - DifferentialEquations
      - Revise
      - OhMyREPL
      - Literate
      - Pluto
      - PyCall
      become: true
      become_user: "{{ user }}"

- name: Install homebrew
  ansible.builtin.shell:
    cmd: >
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    creates: /home/linuxbrew/.linuxbrew/bin/brew
  become: true
  become_user: "{{ user }}"

- name: Upgrade brew packages
  community.general.homebrew:
    update_homebrew: yes
    upgrade_all: yes
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Tap cask-fonts/ for brewing
  community.general.homebrew_tap:
    name: linuxbrew/fonts
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"

- name: Install brew packages
  community.general.homebrew: name={{ item }}
    state=present
  with_items:
    - pulumi
    - navi
    - lsd
    - fzf
    - pyenv
    - fd
    - hyperfine
    - bat
    - font-fira-code-nerd-font
    - thefuck
    - glow
    - nnn
    - svn
    - gh
    - starship
    - btop
    - pandoc
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "/home/linuxbrew/.linuxbrew/lib"
  become: true
  become_user: "{{ user }}"